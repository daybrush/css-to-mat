{"version":3,"file":"css-to-mat.min.js","sources":["../src/CSSToMatrix.ts"],"sourcesContent":["import { mat4 } from \"gl-matrix\";\nimport { splitComma, splitBracket, splitUnit, splitSpace, isArray } from \"@daybrush/utils\";\nimport { MatrixInfo } from \"./types\";\n\nexport function createMatrix() {\n    return [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    ];\n}\nexport function parseMat(transform: string | string[]): number[] {\n    return toMat(parse(transform));\n}\nexport function getElementMatrix(el: HTMLElement) {\n    return parseMat(getComputedStyle(el).transform!);\n}\n\nexport function getDistElementMatrix(el: HTMLElement, container = document.body): number[] {\n    let target: HTMLElement | null = el;\n    const matrix = createMatrix() as any;\n\n    while (target) {\n        const transform = getComputedStyle(target).transform!;\n        mat4.multiply(matrix, parseMat(transform) as mat4, matrix);\n\n        if (target === container) {\n            return;\n        }\n        target = target.parentElement;\n    }\n    mat4.invert(matrix, matrix);\n\n    matrix[12] = 0;\n    matrix[13] = 0;\n    matrix[14] = 0;\n\n    return matrix;\n}\n\nexport function toMat(matrixInfos: MatrixInfo[]): number[] {\n    const target = createMatrix();\n\n    matrixInfos.forEach(info => {\n        const {\n            functionName,\n            functionValue,\n        } = info;\n\n        if (!functionName) {\n            return;\n        }\n        (mat4 as any)[functionName](target, target, functionValue);\n    });\n    return target;\n}\nexport function parse(transform: string | string[]): MatrixInfo[] {\n    const transforms = isArray(transform) ? transform : splitSpace(transform);\n\n    return transforms.map(t => {\n        const { prefix: name, value } = splitBracket(t);\n\n        let functionName: keyof typeof mat4 | \"\" = \"\";\n        let functionValue: any = \"\";\n\n        if (name === \"translate\" || name === \"translateX\" || name === \"translate3d\") {\n            const [posX, posY = 0, posZ = 0] = splitComma(value!).map(v => parseFloat(v));\n\n            functionName = \"translate\";\n            functionValue = [posX, posY, posZ];\n        } else if (name === \"translateY\") {\n            const posY = parseFloat(value!);\n\n            functionName = \"translate\";\n            functionValue = [0, posY, 0];\n        } else if (name === \"translateZ\") {\n            const posZ = parseFloat(value!);\n\n            functionName = \"translate\";\n            functionValue = [0, 0, posZ];\n        } else if (name === \"scale\" || name === \"scale3d\") {\n            const [sx, sy = sx, sz = 1] = splitComma(value!).map(v => parseFloat(v)) as number[];\n\n            functionName = \"scale\";\n            functionValue = [sx, sy, sz];\n        } else if (name === \"scaleX\") {\n            const sx = parseFloat(value!);\n\n            functionName = \"scale\";\n            functionValue = [sx, 1, 1];\n        } else if (name === \"scaleY\") {\n            const sy = parseFloat(value!);\n\n            functionName = \"scale\";\n            functionValue = [1, sy, 1];\n        } else if (name === \"scaleZ\") {\n            const sz = parseFloat(value!);\n            functionName = \"scale\";\n            functionValue = [1, 1, sz];\n        } else if (name === \"rotate\" || name === \"rotateZ\" || name === \"rotateX\" || name === \"rotateY\") {\n            const { unit, value: unitValue } = splitUnit(value!);\n            const rad = unit === \"rad\" ? unitValue : unitValue * Math.PI / 180;\n\n            functionName = name === \"rotate\" ? \"rotateZ\" : name;\n            functionValue = rad;\n        } else if (name === \"matrix3d\") {\n            functionName = \"multiply\";\n            functionValue = splitComma(value!).map(v => parseFloat(v));\n        } else if (name === \"matrix\") {\n            const m = splitComma(value!).map(v => parseFloat(v));\n            functionName = \"multiply\";\n            functionValue = [\n                m[0], m[1], 0, 0,\n                m[2], m[3], 0, 0,\n                0, 0, 1, 0,\n                m[4], m[5], 0, 1,\n            ];\n        }\n        return {\n            name: name!,\n            value: value!,\n            functionName,\n            functionValue,\n        };\n    });\n}\n"],"names":["createMatrix","parseMat","transform","toMat","parse","matrixInfos","target","forEach","info","functionName","functionValue","mat4","isArray","splitSpace","map","t","_a","name","value","_b","posX","_c","posY","_d","parseFloat","_e","sx","_f","sy","_g","_h","unit","unitValue","Math","PI","splitComma","v","m","el","container","document","body","matrix","getComputedStyle","parentElement"],"mappings":";;;;;;;;wuiBAIgBA,UACL,CACH,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,YAGDC,EAASC,UACdC,EAAMC,EAAMF,aA4BPC,EAAME,OACZC,EArCC,CACH,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,UAmCbD,EAAYE,QAAQ,SAAAC,OAEZC,iBACAC,kBAGCD,GAGJE,EAAaF,GAAcH,EAAQA,EAAQI,KAEzCJ,WAEKF,EAAMF,8CACCU,CAAQV,GAAaA,6BAAYW,CAAWX,IAE7CY,IAAI,SAAAC,OACZC,8HAAEC,WAAcC,UAElBT,EAAuC,GACvCC,EAAqB,MAEZ,cAATO,GAAiC,eAATA,GAAkC,gBAATA,EAAwB,KACnEE,8CAACC,OAAMC,OAAAC,iBAAUC,OAEvBd,EAAe,YACfC,EAAgB,CAACU,EAAME,uBACpB,GAAa,eAATL,EAAuB,CAG9BR,EAAe,YACfC,EAAgB,CAAC,EAHXY,EAAOE,WAAWN,GAGE,QACvB,GAAa,eAATD,EAAuB,CAG9BR,EAAe,YACfC,EAAgB,CAAC,EAAG,EAHPc,WAAWN,SAIrB,GAAa,UAATD,GAA6B,YAATA,EAAoB,KACzCQ,8CAACC,OAAIC,OAAAC,iBAASC,OAEpBpB,EAAe,QACfC,EAAgB,CAACgB,EAAIE,uBAClB,GAAa,WAATX,EAAmB,CAG1BR,EAAe,QACfC,EAAgB,CAHVgB,EAAKF,WAAWN,GAGD,EAAG,QACrB,GAAa,WAATD,EAAmB,CAG1BR,EAAe,QACfC,EAAgB,CAAC,EAHXkB,EAAKJ,WAAWN,GAGE,QACrB,GAAa,WAATD,EAAmB,CAE1BR,EAAe,QACfC,EAAgB,CAAC,EAAG,EAFTc,WAAWN,SAGnB,GAAa,WAATD,GAA8B,YAATA,GAA+B,YAATA,GAA+B,YAATA,EAAoB,KACtFa,2LAAEC,SAAMC,UAGdvB,EAAwB,WAATQ,EAAoB,UAAYA,EAC/CP,EAHqB,QAATqB,EAAiBC,EAAYA,EAAYC,KAAKC,GAAK,SAI5D,GAAa,aAATjB,EACPR,EAAe,WACfC,EAAgByB,EAAWjB,GAAQJ,IAAI,SAAAsB,UAAKZ,WAAWY,UACpD,GAAa,WAATnB,EAAmB,KACpBoB,EAAIF,EAAWjB,GAAQJ,IAAI,SAAAsB,UAAKZ,WAAWY,KACjD3B,EAAe,WACfC,EAAgB,CACZ2B,EAAE,GAAIA,EAAE,GAAI,EAAG,EACfA,EAAE,GAAIA,EAAE,GAAI,EAAG,EACf,EAAG,EAAG,EAAG,EACTA,EAAE,GAAIA,EAAE,GAAI,EAAG,SAGhB,CACHpB,KAAMA,EACNC,MAAOA,EACPT,eACAC,mFAxGyB4B,EAAiBC,gBAAAA,EAAYC,SAASC,cACnEnC,EAA6BgC,EAC3BI,EAhBC,CACH,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAcNpC,GAAQ,IAEXK,EAAc+B,EAAQzC,EADJ0C,iBAAiBrC,GAAQJ,WACQwC,GAE/CpC,IAAWiC,SAGfjC,EAASA,EAAOsC,qBAEpBjC,EAAY+B,EAAQA,GAEpBA,EAAO,IAAM,EACbA,EAAO,IAAM,EACbA,EAAO,IAAM,EAENA,6BAvBsBJ,UACtBrC,EAAS0C,iBAAiBL,GAAIpC"}
{"version":3,"file":"css-to-mat.esm.js","sources":["../src/CSSToMatrix.ts"],"sourcesContent":["import { mat4 } from \"gl-matrix\";\nimport { splitComma, splitBracket, splitUnit, splitSpace, isArray } from \"@daybrush/utils\";\nimport { MatrixInfo } from \"./types\";\n\nexport function parseMat(transform: string | string[]): number[] {\n    return toMat(parse(transform));\n}\nexport function toMat(matrixInfos: MatrixInfo[]): number[] {\n    const target = [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    ];\n\n    matrixInfos.forEach(info => {\n        const {\n            functionName,\n            functionValue,\n        } = info;\n\n        if (!functionName) {\n            return;\n        }\n        (mat4 as any)[functionName](target, target, functionValue);\n    });\n    return target;\n}\nexport function parse(transform: string | string[]): MatrixInfo[] {\n    const transforms = isArray(transform) ? transform : splitSpace(transform);\n\n    return transforms.map(t => {\n        const { prefix: name, value } = splitBracket(t);\n\n        let functionName: keyof typeof mat4 | \"\" = \"\";\n        let functionValue: any = \"\";\n\n        if (name === \"translate\" || name === \"translateX\" || name === \"translate3d\") {\n            const [posX, posY = 0, posZ = 0] = splitComma(value!).map(v => parseFloat(v));\n\n            functionName = \"translate\";\n            functionValue = [posX, posY, posZ];\n        } else if (name === \"translateY\") {\n            const posY = parseFloat(value!);\n\n            functionName = \"translate\";\n            functionValue = [0, posY, 0];\n        } else if (name === \"translateZ\") {\n            const posZ = parseFloat(value!);\n\n            functionName = \"translate\";\n            functionValue = [0, 0, posZ];\n        } else if (name === \"scale\" || name === \"scale3d\") {\n            const [sx, sy = sx, sz = 1] = splitComma(value!).map(v => parseFloat(v)) as number[];\n\n            functionName = \"scale\";\n            functionValue = [sx, sy, sz];\n        } else if (name === \"scaleX\") {\n            const sx = parseFloat(value!);\n\n            functionName = \"scale\";\n            functionValue = [sx, 1, 1];\n        } else if (name === \"scaleY\") {\n            const sy = parseFloat(value!);\n\n            functionName = \"scale\";\n            functionValue = [1, sy, 1];\n        } else if (name === \"scaleZ\") {\n            const sz = parseFloat(value!);\n            functionName = \"scale\";\n            functionValue = [1, 1, sz];\n        } else if (name === \"rotate\" || name === \"rotateZ\" || name === \"rotateX\" || name === \"rotateY\") {\n            const { unit, value: unitValue } = splitUnit(value!);\n            const rad = unit === \"rad\" ? unitValue : unitValue * Math.PI / 180;\n\n            functionName = name === \"rotate\" ? \"rotateZ\" : name;\n            functionValue = rad;\n        } else if (name === \"matrix3d\") {\n            functionName = \"multiply\";\n            functionValue = splitComma(value!).map(v => parseFloat(v));\n        } else if (name === \"matrix\") {\n            const m = splitComma(value!).map(v => parseFloat(v));\n            functionName = \"multiply\";\n            functionValue = [\n                m[0], m[1], 0, 0,\n                m[2], m[3], 0, 0,\n                0, 0, 1, 0,\n                m[4], m[5], 0, 1,\n            ];\n        }\n        return {\n            name: name!,\n            value: value!,\n            functionName,\n            functionValue,\n        };\n    });\n}\n"],"names":["parseMat","transform","toMat","parse","matrixInfos","target","forEach","info","functionName","functionValue","mat4","transforms","isArray","splitSpace","map","t","_a","name","value","_b","posX","_c","posY","_d","posZ","parseFloat","_e","sx","_f","sy","_g","sz","_h","unit","unitValue","rad","Math","PI","splitComma","v","m"],"mappings":"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"}
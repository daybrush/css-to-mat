{"version":3,"file":"css-to-mat.js","sources":["../src/CssToMatrix.ts"],"sourcesContent":["import { splitComma, splitBracket, splitUnit, splitSpace, isArray } from \"@daybrush/utils\";\nimport { MatrixInfo } from \"./types\";\nimport { calculate, invert, matrix3d, rotateX3d, rotateY3d, rotateZ3d, scale3d, translate3d } from \"@scena/matrix\";\n\nexport function createMatrix() {\n    return [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    ];\n}\nexport function parseMat(transform: string | string[]): number[] {\n    return toMat(parse(transform));\n}\nexport function getElementMatrix(el: HTMLElement) {\n    return parseMat(getComputedStyle(el).transform!);\n}\nexport function caculateMatrixDist(matrix: number[], pos: number[]) {\n    const res = calculate(matrix, [pos[0], pos[1] || 0, pos[2] || 0, 1], 4);\n    const w = res[3] || 1;\n\n    return [\n        res[0] / w,\n        res[1] / w,\n        res[2] / w,\n    ];\n}\nexport function getDistElementMatrix(el: HTMLElement, container = document.body): number[] {\n    let target: HTMLElement | null = el;\n    let matrix = createMatrix();\n\n    while (target) {\n        const transform = getComputedStyle(target).transform!;\n        matrix = matrix3d(parseMat(transform), matrix);\n\n        if (target === container) {\n            break;\n        }\n        target = target.parentElement;\n    }\n    matrix = invert(matrix, 4);\n\n    matrix[12] = 0;\n    matrix[13] = 0;\n    matrix[14] = 0;\n\n    return matrix;\n}\n\nexport function toMat(matrixInfos: MatrixInfo[]): number[] {\n    let target = createMatrix();\n\n    matrixInfos.forEach(info => {\n        const {\n            matrixFunction,\n            functionValue,\n        } = info;\n\n        if (!matrixFunction) {\n            return;\n        }\n        target = matrixFunction(target, functionValue);\n    });\n    return target;\n}\nexport function parse(transform: string | string[]): MatrixInfo[] {\n    const transforms = isArray(transform) ? transform : splitSpace(transform);\n\n    return transforms.map(t => {\n        const { prefix: name, value } = splitBracket(t);\n\n        let matrixFunction = null;\n        let functionValue: any = \"\";\n\n        if (name === \"translate\" || name === \"translateX\" || name === \"translate3d\") {\n            const [posX, posY = 0, posZ = 0] = splitComma(value!).map(v => parseFloat(v));\n\n            matrixFunction = translate3d;\n            functionValue = [posX, posY, posZ];\n        } else if (name === \"translateY\") {\n            const posY = parseFloat(value!);\n\n            matrixFunction = translate3d;\n            functionValue = [0, posY, 0];\n        } else if (name === \"translateZ\") {\n            const posZ = parseFloat(value!);\n\n            matrixFunction = translate3d;\n            functionValue = [0, 0, posZ];\n        } else if (name === \"scale\" || name === \"scale3d\") {\n            const [sx, sy = sx, sz = 1] = splitComma(value!).map(v => parseFloat(v)) as number[];\n\n            matrixFunction = scale3d;\n            functionValue = [sx, sy, sz];\n        } else if (name === \"scaleX\") {\n            const sx = parseFloat(value!);\n\n            matrixFunction = scale3d;\n            functionValue = [sx, 1, 1];\n        } else if (name === \"scaleY\") {\n            const sy = parseFloat(value!);\n\n            matrixFunction = scale3d;\n            functionValue = [1, sy, 1];\n        } else if (name === \"scaleZ\") {\n            const sz = parseFloat(value!);\n\n            matrixFunction = scale3d;\n            functionValue = [1, 1, sz];\n        } else if (name === \"rotate\" || name === \"rotateZ\" || name === \"rotateX\" || name === \"rotateY\") {\n            const { unit, value: unitValue } = splitUnit(value!);\n            const rad = unit === \"rad\" ? unitValue : unitValue * Math.PI / 180;\n\n            if (name === \"rotate\" || name === \"rotateZ\") {\n                matrixFunction = rotateZ3d;\n            } else if (name === \"rotateX\") {\n                matrixFunction = rotateX3d;\n            } else if (name === \"rotateY\") {\n                matrixFunction = rotateY3d;\n            }\n            functionValue = rad;\n        } else if (name === \"matrix3d\") {\n            matrixFunction = matrix3d;\n            functionValue = splitComma(value!).map(v => parseFloat(v));\n        } else if (name === \"matrix\") {\n            const m = splitComma(value!).map(v => parseFloat(v));\n            matrixFunction = matrix3d;\n            functionValue = [\n                m[0], m[1], 0, 0,\n                m[2], m[3], 0, 0,\n                0, 0, 1, 0,\n                m[4], m[5], 0, 1,\n            ];\n        }\n        return {\n            name: name!,\n            value: value!,\n            matrixFunction,\n            functionValue,\n        };\n    });\n}\n"],"names":["createMatrix","parseMat","transform","toMat","parse","getElementMatrix","el","getComputedStyle","caculateMatrixDist","matrix","pos","res","calculate","w","getDistElementMatrix","container","document","body","target","matrix3d","parentElement","invert","matrixInfos","forEach","info","matrixFunction","functionValue","transforms","isArray","splitSpace","map","t","_a","name","value","_b","posX","_c","posY","_d","posZ","translate3d","parseFloat","_e","sx","_f","sy","_g","sz","scale3d","_h","unit","unitValue","rad","Math","PI","rotateZ3d","rotateX3d","rotateY3d","splitComma","v","m"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAIgBA;EACZ,SAAO,CACH,CADG,EACA,CADA,EACG,CADH,EACM,CADN,EAEH,CAFG,EAEA,CAFA,EAEG,CAFH,EAEM,CAFN,EAGH,CAHG,EAGA,CAHA,EAGG,CAHH,EAGM,CAHN,EAIH,CAJG,EAIA,CAJA,EAIG,CAJH,EAIM,CAJN,CAAP;EAMH;AACD,WAAgBC,SAASC;EACrB,SAAOC,KAAK,CAACC,KAAK,CAACF,SAAD,CAAN,CAAZ;EACH;AACD,WAAgBG,iBAAiBC;EAC7B,SAAOL,QAAQ,CAACM,gBAAgB,CAACD,EAAD,CAAhB,CAAqBJ,SAAtB,CAAf;EACH;AACD,WAAgBM,mBAAmBC,QAAkBC;EACjD,MAAMC,GAAG,GAAGC,SAAS,CAACH,MAAD,EAAS,CAACC,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAH,IAAU,CAAnB,EAAsBA,GAAG,CAAC,CAAD,CAAH,IAAU,CAAhC,EAAmC,CAAnC,CAAT,EAAgD,CAAhD,CAArB;EACA,MAAMG,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAH,IAAU,CAApB;EAEA,SAAO,CACHA,GAAG,CAAC,CAAD,CAAH,GAASE,CADN,EAEHF,GAAG,CAAC,CAAD,CAAH,GAASE,CAFN,EAGHF,GAAG,CAAC,CAAD,CAAH,GAASE,CAHN,CAAP;EAKH;AACD,WAAgBC,qBAAqBR,IAAiBS;EAAA,0BAAA,EAAA;EAAAA,IAAAA,YAAYC,QAAQ,CAACC,IAArB;;;EAClD,MAAIC,MAAM,GAAuBZ,EAAjC;EACA,MAAIG,MAAM,GAAGT,YAAY,EAAzB;;EAEA,SAAOkB,MAAP,EAAe;EACX,QAAMhB,SAAS,GAAGK,gBAAgB,CAACW,MAAD,CAAhB,CAAyBhB,SAA3C;EACAO,IAAAA,MAAM,GAAGU,QAAQ,CAAClB,QAAQ,CAACC,SAAD,CAAT,EAAsBO,MAAtB,CAAjB;;EAEA,QAAIS,MAAM,KAAKH,SAAf,EAA0B;EACtB;EACH;;EACDG,IAAAA,MAAM,GAAGA,MAAM,CAACE,aAAhB;EACH;;EACDX,EAAAA,MAAM,GAAGY,MAAM,CAACZ,MAAD,EAAS,CAAT,CAAf;EAEAA,EAAAA,MAAM,CAAC,EAAD,CAAN,GAAa,CAAb;EACAA,EAAAA,MAAM,CAAC,EAAD,CAAN,GAAa,CAAb;EACAA,EAAAA,MAAM,CAAC,EAAD,CAAN,GAAa,CAAb;EAEA,SAAOA,MAAP;EACH;AAED,WAAgBN,MAAMmB;EAClB,MAAIJ,MAAM,GAAGlB,YAAY,EAAzB;EAEAsB,EAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAAC,IAAA;EAEZ,QAAAC,oCAAA;EAAA,QACAC,kCADA;;EAIJ,QAAI,CAACD,cAAL,EAAqB;EACjB;EACH;;EACDP,IAAAA,MAAM,GAAGO,cAAc,CAACP,MAAD,EAASQ,aAAT,CAAvB;EACH,GAVD;EAWA,SAAOR,MAAP;EACH;AACD,WAAgBd,MAAMF;EAClB,MAAMyB,UAAU,GAAGC,OAAO,CAAC1B,SAAD,CAAP,GAAqBA,SAArB,GAAiC2B,UAAU,CAAC3B,SAAD,CAA9D;EAEA,SAAOyB,UAAU,CAACG,GAAX,CAAe,UAAAC,CAAA;EACZ,QAAAC,oBAAA;EAAA,QAAEC,gBAAF;EAAA,QAAgBC,gBAAhB;;EAEN,QAAIT,cAAc,GAAG,IAArB;EACA,QAAIC,aAAa,GAAQ,EAAzB;;EAEA,QAAIO,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,YAAjC,IAAiDA,IAAI,KAAK,aAA9D,EAA6E;EACnE,UAAAE;;UAAA;EAAA,UAACC,YAAD;EAAA,UAAOC,UAAP;EAAA,UAAOC,6BAAP;EAAA,UAAiBC,UAAjB;EAAA,UAAiBC,6BAAjB;;EAENf,MAAAA,cAAc,GAAGgB,WAAjB;EACAf,MAAAA,aAAa,GAAG,CAACU,IAAD,EAAOE,IAAP,EAAaE,IAAb,CAAhB;EACH,KALD,MAKO,IAAIP,IAAI,KAAK,YAAb,EAA2B;EAC9B,UAAMK,IAAI,GAAGI,UAAU,CAACR,KAAD,CAAvB;EAEAT,MAAAA,cAAc,GAAGgB,WAAjB;EACAf,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAIY,IAAJ,EAAU,CAAV,CAAhB;EACH,KALM,MAKA,IAAIL,IAAI,KAAK,YAAb,EAA2B;EAC9B,UAAMO,IAAI,GAAGE,UAAU,CAACR,KAAD,CAAvB;EAEAT,MAAAA,cAAc,GAAGgB,WAAjB;EACAf,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAOc,IAAP,CAAhB;EACH,KALM,MAKA,IAAIP,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAAjC,EAA4C;EACzC,UAAAU;;UAAA;EAAA,UAACC,UAAD;EAAA,UAAKC,UAAL;EAAA,UAAKC,4BAAL;EAAA,UAAcC,UAAd;EAAA,UAAcC,2BAAd;;EAENvB,MAAAA,cAAc,GAAGwB,OAAjB;EACAvB,MAAAA,aAAa,GAAG,CAACkB,EAAD,EAAKE,EAAL,EAASE,EAAT,CAAhB;EACH,KALM,MAKA,IAAIf,IAAI,KAAK,QAAb,EAAuB;EAC1B,UAAMW,EAAE,GAAGF,UAAU,CAACR,KAAD,CAArB;EAEAT,MAAAA,cAAc,GAAGwB,OAAjB;EACAvB,MAAAA,aAAa,GAAG,CAACkB,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAhB;EACH,KALM,MAKA,IAAIX,IAAI,KAAK,QAAb,EAAuB;EAC1B,UAAMa,EAAE,GAAGJ,UAAU,CAACR,KAAD,CAArB;EAEAT,MAAAA,cAAc,GAAGwB,OAAjB;EACAvB,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAIoB,EAAJ,EAAQ,CAAR,CAAhB;EACH,KALM,MAKA,IAAIb,IAAI,KAAK,QAAb,EAAuB;EAC1B,UAAMe,EAAE,GAAGN,UAAU,CAACR,KAAD,CAArB;EAEAT,MAAAA,cAAc,GAAGwB,OAAjB;EACAvB,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAOsB,EAAP,CAAhB;EACH,KALM,MAKA,IAAIf,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,SAA9B,IAA2CA,IAAI,KAAK,SAApD,IAAiEA,IAAI,KAAK,SAA9E,EAAyF;EACtF,UAAAiB,qBAAA;EAAA,UAAEC,cAAF;EAAA,UAAQC,oBAAR;;EACN,UAAMC,GAAG,GAAGF,IAAI,KAAK,KAAT,GAAiBC,SAAjB,GAA6BA,SAAS,GAAGE,IAAI,CAACC,EAAjB,GAAsB,GAA/D;;EAEA,UAAItB,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,SAAlC,EAA6C;EACzCR,QAAAA,cAAc,GAAG+B,SAAjB;EACH,OAFD,MAEO,IAAIvB,IAAI,KAAK,SAAb,EAAwB;EAC3BR,QAAAA,cAAc,GAAGgC,SAAjB;EACH,OAFM,MAEA,IAAIxB,IAAI,KAAK,SAAb,EAAwB;EAC3BR,QAAAA,cAAc,GAAGiC,SAAjB;EACH;;EACDhC,MAAAA,aAAa,GAAG2B,GAAhB;EACH,KAZM,MAYA,IAAIpB,IAAI,KAAK,UAAb,EAAyB;EAC5BR,MAAAA,cAAc,GAAGN,QAAjB;EACAO,MAAAA,aAAa,GAAGiC,UAAU,CAACzB,KAAD,CAAV,CAAmBJ,GAAnB,CAAuB,UAAA8B,CAAA;EAAK,eAAAlB,UAAU,CAACkB,CAAD,CAAV;EAAa,OAAzC,CAAhB;EACH,KAHM,MAGA,IAAI3B,IAAI,KAAK,QAAb,EAAuB;EAC1B,UAAM4B,CAAC,GAAGF,UAAU,CAACzB,KAAD,CAAV,CAAmBJ,GAAnB,CAAuB,UAAA8B,CAAA;EAAK,eAAAlB,UAAU,CAACkB,CAAD,CAAV;EAAa,OAAzC,CAAV;EACAnC,MAAAA,cAAc,GAAGN,QAAjB;EACAO,MAAAA,aAAa,GAAG,CACZmC,CAAC,CAAC,CAAD,CADW,EACNA,CAAC,CAAC,CAAD,CADK,EACA,CADA,EACG,CADH,EAEZA,CAAC,CAAC,CAAD,CAFW,EAENA,CAAC,CAAC,CAAD,CAFK,EAEA,CAFA,EAEG,CAFH,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAGH,CAHG,EAIZA,CAAC,CAAC,CAAD,CAJW,EAINA,CAAC,CAAC,CAAD,CAJK,EAIA,CAJA,EAIG,CAJH,CAAhB;EAMH;;EACD,WAAO;EACH5B,MAAAA,IAAI,EAAEA,IADH;EAEHC,MAAAA,KAAK,EAAEA,KAFJ;EAGHT,MAAAA,cAAc,gBAHX;EAIHC,MAAAA,aAAa;EAJV,KAAP;EAMH,GAxEM,CAAP;EAyEH;;;;;;;;;;;;;;;;;;;;"}